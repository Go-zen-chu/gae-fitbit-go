// Code generated by MockGen. DO NOT EDIT.
// Source: fitbitauth.go

// Package fitbitauth is a generated GoMock package.
package fitbitauth

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockFitbitAuthHandler is a mock of FitbitAuthHandler interface
type MockFitbitAuthHandler struct {
	ctrl     *gomock.Controller
	recorder *MockFitbitAuthHandlerMockRecorder
}

// MockFitbitAuthHandlerMockRecorder is the mock recorder for MockFitbitAuthHandler
type MockFitbitAuthHandlerMockRecorder struct {
	mock *MockFitbitAuthHandler
}

// NewMockFitbitAuthHandler creates a new mock instance
func NewMockFitbitAuthHandler(ctrl *gomock.Controller) *MockFitbitAuthHandler {
	mock := &MockFitbitAuthHandler{ctrl: ctrl}
	mock.recorder = &MockFitbitAuthHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFitbitAuthHandler) EXPECT() *MockFitbitAuthHandlerMockRecorder {
	return m.recorder
}

// Redirect2Fitbit mocks base method
func (m *MockFitbitAuthHandler) Redirect2Fitbit(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Redirect2Fitbit", w, r)
}

// Redirect2Fitbit indicates an expected call of Redirect2Fitbit
func (mr *MockFitbitAuthHandlerMockRecorder) Redirect2Fitbit(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Redirect2Fitbit", reflect.TypeOf((*MockFitbitAuthHandler)(nil).Redirect2Fitbit), w, r)
}

// HandleFitbitAuthCode mocks base method
func (m *MockFitbitAuthHandler) HandleFitbitAuthCode(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleFitbitAuthCode", w, r)
}

// HandleFitbitAuthCode indicates an expected call of HandleFitbitAuthCode
func (mr *MockFitbitAuthHandlerMockRecorder) HandleFitbitAuthCode(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleFitbitAuthCode", reflect.TypeOf((*MockFitbitAuthHandler)(nil).HandleFitbitAuthCode), w, r)
}
