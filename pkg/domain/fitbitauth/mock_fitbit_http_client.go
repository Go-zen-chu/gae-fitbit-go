// Code generated by MockGen. DO NOT EDIT.
// Source: fitbit_http_client.go

// Package fitbitauth is a generated GoMock package.
package fitbitauth

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFitbitHTTPClient is a mock of FitbitHTTPClient interface
type MockFitbitHTTPClient struct {
	ctrl     *gomock.Controller
	recorder *MockFitbitHTTPClientMockRecorder
}

// MockFitbitHTTPClientMockRecorder is the mock recorder for MockFitbitHTTPClient
type MockFitbitHTTPClientMockRecorder struct {
	mock *MockFitbitHTTPClient
}

// NewMockFitbitHTTPClient creates a new mock instance
func NewMockFitbitHTTPClient(ctrl *gomock.Controller) *MockFitbitHTTPClient {
	mock := &MockFitbitHTTPClient{ctrl: ctrl}
	mock.recorder = &MockFitbitHTTPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFitbitHTTPClient) EXPECT() *MockFitbitHTTPClientMockRecorder {
	return m.recorder
}

// GetFitbitToken mocks base method
func (m *MockFitbitHTTPClient) GetFitbitToken(fbtp *FitbitTokenParams, authCode string) (*FitbitTokens, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFitbitToken", fbtp, authCode)
	ret0, _ := ret[0].(*FitbitTokens)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFitbitToken indicates an expected call of GetFitbitToken
func (mr *MockFitbitHTTPClientMockRecorder) GetFitbitToken(fbtp, authCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFitbitToken", reflect.TypeOf((*MockFitbitHTTPClient)(nil).GetFitbitToken), fbtp, authCode)
}
