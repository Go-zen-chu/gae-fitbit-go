// Code generated by MockGen. DO NOT EDIT.
// Source: index.go

// Package index is a generated GoMock package.
package index

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockIndexHandler is a mock of IndexHandler interface
type MockIndexHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIndexHandlerMockRecorder
}

// MockIndexHandlerMockRecorder is the mock recorder for MockIndexHandler
type MockIndexHandlerMockRecorder struct {
	mock *MockIndexHandler
}

// NewMockIndexHandler creates a new mock instance
func NewMockIndexHandler(ctrl *gomock.Controller) *MockIndexHandler {
	mock := &MockIndexHandler{ctrl: ctrl}
	mock.recorder = &MockIndexHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIndexHandler) EXPECT() *MockIndexHandlerMockRecorder {
	return m.recorder
}

// HandleIndex mocks base method
func (m *MockIndexHandler) HandleIndex(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleIndex", w, r)
}

// HandleIndex indicates an expected call of HandleIndex
func (mr *MockIndexHandlerMockRecorder) HandleIndex(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleIndex", reflect.TypeOf((*MockIndexHandler)(nil).HandleIndex), w, r)
}
