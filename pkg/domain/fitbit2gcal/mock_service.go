// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package fitbit2gcal is a generated GoMock package.
package fitbit2gcal

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// HandleFitbit2GCal mocks base method
func (m *MockService) HandleFitbit2GCal(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleFitbit2GCal", w, r)
}

// HandleFitbit2GCal indicates an expected call of HandleFitbit2GCal
func (mr *MockServiceMockRecorder) HandleFitbit2GCal(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleFitbit2GCal", reflect.TypeOf((*MockService)(nil).HandleFitbit2GCal), w, r)
}
